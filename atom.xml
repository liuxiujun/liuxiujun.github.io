<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liuxiujun</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liuxiujun.github.into/"/>
  <updated>2020-02-05T04:35:20.063Z</updated>
  <id>https://liuxiujun.github.into/</id>
  
  <author>
    <name>liuxiujun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac平台VSCode配置C51开发环境</title>
    <link href="https://liuxiujun.github.into/2020/01/06/Mac%E5%B9%B3%E5%8F%B0VSCode%E9%85%8D%E7%BD%AEC51%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://liuxiujun.github.into/2020/01/06/Mac%E5%B9%B3%E5%8F%B0VSCode%E9%85%8D%E7%BD%AEC51%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2020-01-06T10:35:08.000Z</published>
    <updated>2020-02-05T04:35:20.063Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装-sdcc-编译器"><a href="#安装-sdcc-编译器" class="headerlink" title="安装 sdcc 编译器"></a>安装 sdcc 编译器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sdcc</span><br></pre></td></tr></table></figure><h3 id="安装CH341驱动"><a href="#安装CH341驱动" class="headerlink" title="安装CH341驱动"></a>安装CH341驱动</h3><blockquote><p> 开发版集成了usb转串口模块, 使用的是CH340芯片, 需要安装驱动</p></blockquote><p><a href="http://www.wch.cn/download/CH341SER_MAC_ZIP.html" target="_blank" rel="noopener">http://www.wch.cn/download/CH341SER_MAC_ZIP.html</a></p><h3 id="确认驱动是否安装成功"><a href="#确认驱动是否安装成功" class="headerlink" title="确认驱动是否安装成功"></a>确认驱动是否安装成功</h3><blockquote><p>需要把单片机连接上电脑</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls /dev/tty.wchusbserial*</span></span><br><span class="line">/dev/tty.wchusbserial1420</span><br></pre></td></tr></table></figure><h3 id="安装-stcgal-烧录程序"><a href="#安装-stcgal-烧录程序" class="headerlink" title="安装 stcgal 烧录程序"></a>安装 stcgal 烧录程序</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install stcgal</span><br></pre></td></tr></table></figure><h3 id="VSCode-配置"><a href="#VSCode-配置" class="headerlink" title="VSCode 配置"></a>VSCode 配置</h3><p>需要安装 Code Runner 插件</p><p>编辑配置文件 <code>.vscode/c_cpp_properties.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"51"</span>,</span><br><span class="line">            <span class="attr">"includePath"</span>: [</span><br><span class="line">                <span class="string">"$&#123;workspaceFolder&#125;/**"</span>,</span><br><span class="line">                <span class="string">"/usr/local/Cellar/sdcc/3.9.0/share/sdcc/include"</span>,</span><br><span class="line">                <span class="string">"/usr/local/Cellar/sdcc/3.9.0/share/sdcc/include/mcs51"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"defines"</span>: [],</span><br><span class="line">            <span class="attr">"compilerPath"</span>: <span class="string">"/usr/local/Cellar/sdcc/3.9.0/bin/sdcc"</span>,</span><br><span class="line">            <span class="attr">"cStandard"</span>: <span class="string">"c11"</span>,</span><br><span class="line">            <span class="attr">"cppStandard"</span>: <span class="string">"c++17"</span>,</span><br><span class="line">            <span class="attr">"intelliSenseMode"</span>: <span class="string">"clang-x64"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"version"</span>: <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑配置文件 <code>.vscode/settings.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"files.associations"</span>: &#123;</span><br><span class="line">        <span class="attr">"8052.h"</span>: <span class="string">"c"</span>,</span><br><span class="line">        <span class="attr">"8051.h"</span>: <span class="string">"c"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"code-runner.executorMap"</span>: &#123;</span><br><span class="line">        <span class="attr">"c"</span>: <span class="string">"cd $dir &amp; sdcc $fileName &amp; stcgal -P stc89 -p /dev/tty.wchusbserial1420 $fileNameWithoutExt.ihx"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一个测试程序"><a href="#第一个测试程序" class="headerlink" title="第一个测试程序"></a>第一个测试程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;8052.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR0 P0_0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ADDR0 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⌃⌥N 运行, 提示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Waiting for MCU, please cycle power:</span><br></pre></td></tr></table></figure><p>开发版重新上电后，第一个led亮起</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装-sdcc-编译器&quot;&gt;&lt;a href=&quot;#安装-sdcc-编译器&quot; class=&quot;headerlink&quot; title=&quot;安装 sdcc 编译器&quot;&gt;&lt;/a&gt;安装 sdcc 编译器&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
    
      <category term="单片机" scheme="https://liuxiujun.github.into/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python实现微服务从听过到略懂</title>
    <link href="https://liuxiujun.github.into/2019/12/30/Python%E5%AE%9E%E7%8E%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%8E%E5%90%AC%E8%BF%87%E5%88%B0%E7%95%A5%E6%87%82/"/>
    <id>https://liuxiujun.github.into/2019/12/30/Python%E5%AE%9E%E7%8E%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%8E%E5%90%AC%E8%BF%87%E5%88%B0%E7%95%A5%E6%87%82/</id>
    <published>2019-12-30T08:45:26.000Z</published>
    <updated>2020-02-05T04:35:20.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>python3, flask, python-consul, docker</p><h3 id="使用docker-拉取-consul"><a href="#使用docker-拉取-consul" class="headerlink" title="使用docker 拉取 consul"></a>使用docker 拉取 consul</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull consul</span><br></pre></td></tr></table></figure><h3 id="使用docker-compose-编排-consul-容器，-为了快速搞定注册发现这块，-启一个节点测试用，-生产环境别这么搞"><a href="#使用docker-compose-编排-consul-容器，-为了快速搞定注册发现这块，-启一个节点测试用，-生产环境别这么搞" class="headerlink" title="使用docker-compose 编排 consul 容器， 为了快速搞定注册发现这块， 启一个节点测试用， 生产环境别这么搞"></a>使用docker-compose 编排 consul 容器， 为了快速搞定注册发现这块， 启一个节点测试用， 生产环境别这么搞</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">version: '3.1'</span><br><span class="line">services:</span><br><span class="line">  consul:</span><br><span class="line">    image: consul</span><br><span class="line">    hostname: consul</span><br><span class="line">    container_name: badger</span><br><span class="line">    ports:</span><br><span class="line">      - 8500:8500</span><br><span class="line">      - 8600:8600/udp</span><br><span class="line">    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0</span><br></pre></td></tr></table></figure><h3 id="切换到-docker-compose-yml-所在目录运行"><a href="#切换到-docker-compose-yml-所在目录运行" class="headerlink" title="切换到 docker-compose.yml 所在目录运行"></a>切换到 docker-compose.yml 所在目录运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="访问8500"><a href="#访问8500" class="headerlink" title="访问8500"></a>访问8500</h3><p>…</p><h3 id="测试consul-DNS-解析"><a href="#测试consul-DNS-解析" class="headerlink" title="测试consul DNS 解析"></a>测试consul DNS 解析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig @127.0.0.1 -p 8600 consul.service.dc1.consul. ANY</span><br></pre></td></tr></table></figure><h3 id="本机如果没有dig命令，-替代方法"><a href="#本机如果没有dig命令，-替代方法" class="headerlink" title="本机如果没有dig命令， 替代方法"></a><del>本机如果没有dig命令， 替代方法</del></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm  azukiapp/dig:latest dig @0.0.0.0 -p 8600 consul.service.dc1.consul. ANY</span><br></pre></td></tr></table></figure><h3 id="上面的命令有问题…换成宿主机ip也不成？-先不研究这个，安装dig命令吧"><a href="#上面的命令有问题…换成宿主机ip也不成？-先不研究这个，安装dig命令吧" class="headerlink" title="上面的命令有问题…换成宿主机ip也不成？ 先不研究这个，安装dig命令吧"></a>上面的命令有问题…换成宿主机ip也不成？ 先不研究这个，安装dig命令吧</h3><h3 id="返回结果应该包含节点IP地址"><a href="#返回结果应该包含节点IP地址" class="headerlink" title="返回结果应该包含节点IP地址"></a>返回结果应该包含节点IP地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; @127.0.0.1 -p 8600 consul.service.dc1.consul. ANY</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 16647</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;consul.service.dc1.consul.INANY</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">consul.service.dc1.consul. 0INA172.26.0.2</span><br><span class="line">consul.service.dc1.consul. 0INTXT"consul-network-segment="</span><br><span class="line"></span><br><span class="line">;; Query time: 15 msec</span><br><span class="line">;; SERVER: 127.0.0.1#8600(127.0.0.1)</span><br><span class="line">;; WHEN: Mon Dec 30 09:05:44 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 106</span><br></pre></td></tr></table></figure><h3 id="搭建-flask-开发环境"><a href="#搭建-flask-开发环境" class="headerlink" title="搭建 flask 开发环境"></a>搭建 flask 开发环境</h3><h4 id="create-venv"><a href="#create-venv" class="headerlink" title="create venv"></a>create venv</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir myproject &amp;&amp; cd myproject &amp;&amp; python3 -m venv venv</span><br></pre></td></tr></table></figure><h4 id="active-venv"><a href="#active-venv" class="headerlink" title="active venv"></a>active venv</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. venv/bin/activate</span><br></pre></td></tr></table></figure><h4 id="install-flask"><a href="#install-flask" class="headerlink" title="install flask"></a>install flask</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br><span class="line">pip install python-consul</span><br></pre></td></tr></table></figure><h2 id="现在正式开始"><a href="#现在正式开始" class="headerlink" title="现在正式开始"></a>现在正式开始</h2><h3 id="编写第一个服务-firstapp-py"><a href="#编写第一个服务-firstapp-py" class="headerlink" title="编写第一个服务, firstapp.py"></a>编写第一个服务, firstapp.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    ver=<span class="string">"1.0"</span></span><br><span class="line">    res=<span class="string">'&#123;"Service":"first app", "Version":'</span> + ver + <span class="string">'&#125;\n'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="启动第一个服务"><a href="#启动第一个服务" class="headerlink" title="启动第一个服务"></a>启动第一个服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export FLASK_ENV=development &amp;&amp; export FLASK_APP=firstapp.py &amp;&amp; flask run --host=0.0.0.0 --port=5000</span><br></pre></td></tr></table></figure><h3 id="编写第二个服务，-secondapp-py"><a href="#编写第二个服务，-secondapp-py" class="headerlink" title="编写第二个服务， secondapp.py"></a>编写第二个服务， secondapp.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    ver=<span class="string">"1.0"</span></span><br><span class="line">    res=<span class="string">'&#123;"Service":"second app", "Version":'</span> + ver + <span class="string">'&#125;\n'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="启动第二个服务"><a href="#启动第二个服务" class="headerlink" title="启动第二个服务"></a>启动第二个服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export FLASK_ENV=development &amp;&amp; export FLASK_APP=secondapp.py &amp;&amp; flask run --host=0.0.0.0 --port=5001</span><br></pre></td></tr></table></figure><h3 id="将两个服务注册到consul的脚本"><a href="#将两个服务注册到consul的脚本" class="headerlink" title="将两个服务注册到consul的脚本"></a>将两个服务注册到consul的脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">function register() &#123;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询当前服务IP地址, 默认情况下docker容器内访问宿主机不能用127.0.0.1或localhost</span></span><br><span class="line">addr=`/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '&#123;print $2&#125;'|tr -d "addr:"`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注销服务</span></span><br><span class="line">curl -X PUT http://127.0.0.1:8500/v1/agent/service/deregister/$1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册服务</span></span><br><span class="line">curl -X PUT -d '&#123;</span><br><span class="line">"id": "'$1'", </span><br><span class="line">"name": "'$1'", </span><br><span class="line">"address": "'$&#123;addr&#125;'", </span><br><span class="line">"port": '$2', </span><br><span class="line">"tags": [""], </span><br><span class="line">"checks": [</span><br><span class="line">&#123;</span><br><span class="line">"http": "http://'$&#123;addr&#125;':'$2'",</span><br><span class="line">"interval": "5s"</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;' http://127.0.0.1:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询指定节点以及指定的服务信息</span></span><br><span class="line">curl http://127.0.0.1:8500/v1/catalog/service/$1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">servs=('firstapp 5000' 'secondapp 5001')</span><br><span class="line"></span><br><span class="line">for i in "$&#123;servs[@]&#125;"; do</span><br><span class="line">serv=($i)</span><br><span class="line">name="$&#123;serv[0]&#125;"</span><br><span class="line">port="$&#123;serv[1]&#125;"</span><br><span class="line">register $&#123;name&#125; $&#123;port&#125;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="或者用另一种方式，-在代码里使用-python-consul注册服务，-修改-firstapp-py"><a href="#或者用另一种方式，-在代码里使用-python-consul注册服务，-修改-firstapp-py" class="headerlink" title="或者用另一种方式， 在代码里使用 python-consul注册服务， 修改 firstapp.py"></a>或者用另一种方式， 在代码里使用 python-consul注册服务， 修改 firstapp.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> consul</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">"/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '&#123;print $2&#125;'|tr -d \"addr:\""</span></span><br><span class="line">host = subprocess.check_output([cmd], shell=<span class="literal">True</span>).decode(<span class="string">"utf-8"</span>).strip()</span><br><span class="line">port = <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">c = consul.Consul(host=<span class="string">'127.0.0.1'</span>,</span><br><span class="line">                  port=<span class="number">8500</span>,</span><br><span class="line">                  scheme=<span class="string">'http'</span>,</span><br><span class="line">                  token=<span class="literal">None</span>,</span><br><span class="line">                  verify=<span class="literal">True</span>,</span><br><span class="line">                  cert=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">c.agent.service.register(name=<span class="string">'firstapp'</span>,</span><br><span class="line">                         service_id=<span class="string">'firstapp'</span>,</span><br><span class="line">                         address=host,</span><br><span class="line">                         port=port,</span><br><span class="line">                         tags=<span class="literal">None</span>,</span><br><span class="line">                         check=consul.Check().tcp(host=host,</span><br><span class="line">                                                  port=port,</span><br><span class="line">                                                  interval=<span class="string">"5s"</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    ver = <span class="string">"1.0"</span></span><br><span class="line">    res = <span class="string">'&#123;"Service":"first app", "Version":'</span> + ver + <span class="string">'&#125;\n'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="修改secondapp-py"><a href="#修改secondapp-py" class="headerlink" title="修改secondapp.py"></a>修改secondapp.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> consul</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">cmd = <span class="string">"/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '&#123;print $2&#125;'|tr -d \"addr:\""</span></span><br><span class="line">host = subprocess.check_output([cmd], shell=<span class="literal">True</span>).decode(<span class="string">"utf-8"</span>).strip()</span><br><span class="line">port = <span class="number">5001</span></span><br><span class="line"></span><br><span class="line">c = consul.Consul(host=<span class="string">'127.0.0.1'</span>,</span><br><span class="line">                  port=<span class="number">8500</span>,</span><br><span class="line">                  scheme=<span class="string">'http'</span>,</span><br><span class="line">                  token=<span class="literal">None</span>,</span><br><span class="line">                  verify=<span class="literal">True</span>,</span><br><span class="line">                  cert=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">c.agent.service.register(name=<span class="string">'secondapp'</span>,</span><br><span class="line">                         service_id=<span class="string">'secondapp'</span>,</span><br><span class="line">                         address=host,</span><br><span class="line">                         port=port,</span><br><span class="line">                         tags=<span class="literal">None</span>,</span><br><span class="line">                         check=consul.Check().tcp(host=host,</span><br><span class="line">                                                  port=port,</span><br><span class="line">                                                  interval=<span class="string">"5s"</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getServiceAddress</span><span class="params">(name)</span>:</span></span><br><span class="line">    services = c.agent.services()</span><br><span class="line">    service = services.get(name)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> service:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">    addr = <span class="string">"&#123;0&#125;:&#123;1&#125;"</span>.format(service[<span class="string">'Address'</span>], service[<span class="string">'Port'</span>])</span><br><span class="line">    <span class="keyword">return</span> service, addr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    ver = <span class="string">"1.0"</span></span><br><span class="line">    res = <span class="string">'&#123;"Service":"second app", "Version":'</span> + ver + <span class="string">'&#125;\n'</span></span><br><span class="line">    s = c.Agent.services(c.agent)[<span class="string">'firstapp'</span>]</span><br><span class="line">    serivce, addr = getServiceAddress(<span class="string">"firstapp"</span>)</span><br><span class="line">    res += requests.get(<span class="string">"http://&#123;0&#125;"</span>.format(addr), ).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>到这就算成功略懂了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;python3, flask, python-consul, docker&lt;/p&gt;
&lt;h3 id=&quot;使用docker-拉取-consul&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="Python" scheme="https://liuxiujun.github.into/tags/Python/"/>
    
      <category term="后端" scheme="https://liuxiujun.github.into/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
</feed>
